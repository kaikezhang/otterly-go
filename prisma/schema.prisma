// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users table - stores user account information
model User {
  id               String   @id @default(cuid())
  email            String   @unique
  passwordHash     String   @map("password_hash")
  subscriptionTier String   @default("free") @map("subscription_tier")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  // Relations
  trips            Trip[]

  @@map("users")
}

// Trips table - stores trip itineraries
model Trip {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  title       String
  destination String
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  dataJson    Json     @map("data_json") // Stores full trip object from frontend
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversations Conversation[]

  @@index([userId])
  @@map("trips")
}

// Conversations table - stores chat history for trips
model Conversation {
  id           String   @id @default(cuid())
  tripId       String   @map("trip_id")
  messagesJson Json     @map("messages_json") // Array of ChatMessage objects
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  trip         Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@index([tripId])
  @@map("conversations")
}
